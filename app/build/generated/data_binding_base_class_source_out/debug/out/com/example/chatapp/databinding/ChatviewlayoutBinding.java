// Generated by view binder compiler. Do not edit!
package com.example.chatapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.chatapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ChatviewlayoutBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final CardView cardviewofuser;

  @NonNull
  public final ImageView imageviewofuser;

  @NonNull
  public final TextView nameofuser;

  @NonNull
  public final TextView statusofuser;

  private ChatviewlayoutBinding(@NonNull RelativeLayout rootView, @NonNull CardView cardviewofuser,
      @NonNull ImageView imageviewofuser, @NonNull TextView nameofuser,
      @NonNull TextView statusofuser) {
    this.rootView = rootView;
    this.cardviewofuser = cardviewofuser;
    this.imageviewofuser = imageviewofuser;
    this.nameofuser = nameofuser;
    this.statusofuser = statusofuser;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ChatviewlayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ChatviewlayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.chatviewlayout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ChatviewlayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardviewofuser;
      CardView cardviewofuser = ViewBindings.findChildViewById(rootView, id);
      if (cardviewofuser == null) {
        break missingId;
      }

      id = R.id.imageviewofuser;
      ImageView imageviewofuser = ViewBindings.findChildViewById(rootView, id);
      if (imageviewofuser == null) {
        break missingId;
      }

      id = R.id.nameofuser;
      TextView nameofuser = ViewBindings.findChildViewById(rootView, id);
      if (nameofuser == null) {
        break missingId;
      }

      id = R.id.statusofuser;
      TextView statusofuser = ViewBindings.findChildViewById(rootView, id);
      if (statusofuser == null) {
        break missingId;
      }

      return new ChatviewlayoutBinding((RelativeLayout) rootView, cardviewofuser, imageviewofuser,
          nameofuser, statusofuser);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
